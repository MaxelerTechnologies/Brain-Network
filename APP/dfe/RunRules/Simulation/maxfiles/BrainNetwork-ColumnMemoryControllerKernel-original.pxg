<?xml version="1.0" encoding="UTF-8" ?>
<Graph version="2014.2" pxg_version="1" maxfile_name="BrainNetwork" design_name="ColumnMemoryControllerKernel" compilation_phase="original" has_longest_path="false">
	<Node group="[]" id="10" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:91)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="11" dst_node_input="enable" src_node_id="10" src_node_output="value" />
	<Node group="[]" id="0" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="n_active_points" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>Scalar input (n_active_points)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1106)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:37)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Name>n_active_points</Name>
	</Node>
	<Edge dst_node_id="2" dst_node_input="numerator" src_node_id="0" src_node_output="n_active_points" />
	<Edge dst_node_id="6" dst_node_input="a" src_node_id="0" src_node_output="n_active_points" />
	<Edge dst_node_id="9" dst_node_input="option0" src_node_id="0" src_node_output="n_active_points" />
	<Edge dst_node_id="14" dst_node_input="i" src_node_id="0" src_node_output="n_active_points" />
	<Node group="[]" id="14" isControl="true" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:28, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:103)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="16" dst_node_input="a" src_node_id="14" src_node_output="o" />
	<Node group="[]" id="15" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:103)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="16" dst_node_input="b" src_node_id="15" src_node_output="value" />
	<Node group="[]" id="16" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:103)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="17" dst_node_input="a" src_node_id="16" src_node_output="result" />
	<Node group="[]" id="17" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:103)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="18" dst_node_input="input" src_node_id="17" src_node_output="result" />
	<Node group="[]" id="18" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="-1" name="output" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>stream offset: -1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:104)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="11" dst_node_input="max" src_node_id="18" src_node_output="output" />
	<Node group="[]" id="11" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:91)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="19" dst_node_input="a" src_node_id="11" src_node_output="count" />
	<Edge dst_node_id="13" dst_node_input="enable" src_node_id="11" src_node_output="wrap" />
	<Edge dst_node_id="27" dst_node_input="input" src_node_id="11" src_node_output="wrap" />
	<Node group="[]" id="12" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(29, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:29, 0, UNSIGNED}\n0x10000000; 2.68435456E8</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:98)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>10000000000000000000000000000</Value>
		<HexValue>0x10000000</HexValue>
		<NumericValue>2.68435456E8</NumericValue>
	</Node>
	<Edge dst_node_id="13" dst_node_input="max" src_node_id="12" src_node_output="value" />
	<Node group="[]" id="13" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(29, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 8\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:98)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Increment>8</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="17" dst_node_input="b" src_node_id="13" src_node_output="count" />
	<Edge dst_node_id="19" dst_node_input="b" src_node_id="13" src_node_output="count" />
	<Edge dst_node_id="23" dst_node_input="a" src_node_id="13" src_node_output="count" />
	<Edge dst_node_id="33" dst_node_input="a" src_node_id="13" src_node_output="count" />
	<Edge dst_node_id="47" dst_node_input="a" src_node_id="13" src_node_output="count" />
	<Node group="[]" id="22" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:111)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="23" dst_node_input="b" src_node_id="22" src_node_output="value" />
	<Node group="[]" id="23" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:111)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="26" dst_node_input="a" src_node_id="23" src_node_output="result" />
	<Node group="[]" id="19" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:108)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="21" dst_node_input="a" src_node_id="19" src_node_output="result" />
	<Node group="[]" id="20" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:108)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="21" dst_node_input="b" src_node_id="20" src_node_output="value" />
	<Node group="[]" id="21" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:108)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="25" dst_node_input="a" src_node_id="21" src_node_output="result" />
	<Edge dst_node_id="55" dst_node_input="numerator" src_node_id="21" src_node_output="result" />
	<Edge dst_node_id="58" dst_node_input="numerator" src_node_id="21" src_node_output="result" />
	<Edge dst_node_id="60" dst_node_input="a" src_node_id="21" src_node_output="result" />
	<Node group="[]" id="24" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:111)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="25" dst_node_input="b" src_node_id="24" src_node_output="value" />
	<Node group="[]" id="25" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:111)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="26" dst_node_input="b" src_node_id="25" src_node_output="result" />
	<Node group="[]" id="26" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:111)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="53" dst_node_input="a" src_node_id="26" src_node_output="result" />
	<Node group="[]" id="29" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:120)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="31" dst_node_input="enable" src_node_id="29" src_node_output="value" />
	<Node group="[]" id="30" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1152.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:120)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1152.0</Value>
	</Node>
	<Edge dst_node_id="31" dst_node_input="max" src_node_id="30" src_node_output="value" />
	<Node group="[]" id="27" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="-1" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>stream offset: -1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:245)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:114)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="28" dst_node_input="input" src_node_id="27" src_node_output="output" />
	<Edge dst_node_id="51" dst_node_input="b" src_node_id="27" src_node_output="output" />
	<Node group="[]" id="28" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count$Params.withReset(Count.java:138)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:118)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="31" dst_node_input="userReset" src_node_id="28" src_node_output="output" />
	<Node group="[]" id="31" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(12, 0, UNSIGNED)" />
		<Input name="userReset" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:388)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:120)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="37" dst_node_input="a" src_node_id="31" src_node_output="count" />
	<Edge dst_node_id="41" dst_node_input="a" src_node_id="31" src_node_output="count" />
	<Node group="[]" id="32" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:124)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="33" dst_node_input="b" src_node_id="32" src_node_output="value" />
	<Node group="[]" id="33" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:124)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="35" dst_node_input="numerator" src_node_id="33" src_node_output="result" />
	<Node group="[]" id="34" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:4, 0, UNSIGNED}\n0x9; 9.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.modulo(KernelMath.java:803)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:124)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1001</Value>
		<HexValue>0x9</HexValue>
		<NumericValue>9.0</NumericValue>
	</Node>
	<Edge dst_node_id="35" dst_node_input="denominator" src_node_id="34" src_node_output="value" />
	<Node group="[]" id="35" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDivMod">
		<Input name="numerator" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="denominator" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="29" name="quotient" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="29" name="remainder" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>NodeDivMod</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.modulo(KernelMath.java:803)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:124)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="36" dst_node_input="i" src_node_id="35" src_node_output="remainder" />
	<Node group="[]" id="36" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:11, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:126)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="37" dst_node_input="b" src_node_id="36" src_node_output="o" />
	<Node group="[]" id="37" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:868)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:126)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="39" dst_node_input="a" src_node_id="37" src_node_output="result" />
	<Edge dst_node_id="43" dst_node_input="a" src_node_id="37" src_node_output="result" />
	<Node group="[]" id="38" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1152.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:130)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1152.0</Value>
	</Node>
	<Edge dst_node_id="39" dst_node_input="b" src_node_id="38" src_node_output="value" />
	<Node group="[]" id="39" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:130)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="45" dst_node_input="a" src_node_id="39" src_node_output="result" />
	<Node group="[]" id="40" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:134)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="41" dst_node_input="b" src_node_id="40" src_node_output="value" />
	<Node group="[]" id="41" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:134)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="44" dst_node_input="a" src_node_id="41" src_node_output="result" />
	<Node group="[]" id="42" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:134)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="43" dst_node_input="b" src_node_id="42" src_node_output="value" />
	<Node group="[]" id="43" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(11, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.eq(DFEVar.java:589)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:134)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="44" dst_node_input="b" src_node_id="43" src_node_output="result" />
	<Node group="[]" id="44" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:134)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="45" dst_node_input="b" src_node_id="44" src_node_output="result" />
	<Node group="[]" id="45" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:134)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="51" dst_node_input="a" src_node_id="45" src_node_output="result" />
	<Node group="[]" id="51" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:141)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="52" dst_node_input="a" src_node_id="51" src_node_output="result" />
	<Node group="[]" id="46" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:137)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="47" dst_node_input="b" src_node_id="46" src_node_output="value" />
	<Node group="[]" id="47" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:137)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="50" dst_node_input="a" src_node_id="47" src_node_output="result" />
	<Node group="[]" id="1" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:4, 0, UNSIGNED}\n0x9; 9.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.modulo(KernelMath.java:803)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:80)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1001</Value>
		<HexValue>0x9</HexValue>
		<NumericValue>9.0</NumericValue>
	</Node>
	<Edge dst_node_id="2" dst_node_input="denominator" src_node_id="1" src_node_output="value" />
	<Node group="[]" id="2" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDivMod">
		<Input name="numerator" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="denominator" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="29" name="quotient" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="29" name="remainder" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>NodeDivMod</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.modulo(KernelMath.java:803)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:80)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="4" dst_node_input="a" src_node_id="2" src_node_output="remainder" />
	<Edge dst_node_id="7" dst_node_input="i" src_node_id="2" src_node_output="remainder" />
	<Node group="[]" id="3" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:81)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="4" dst_node_input="b" src_node_id="3" src_node_output="value" />
	<Node group="[]" id="4" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeGt">
		<Input name="a" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:791)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:81)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="9" dst_node_input="sel" src_node_id="4" src_node_output="result" />
	<Node group="[]" id="5" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:82)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge dst_node_id="6" dst_node_input="b" src_node_id="5" src_node_output="value" />
	<Node group="[]" id="6" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAdd">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>+</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:883)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:82)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="8" dst_node_input="a" src_node_id="6" src_node_output="result" />
	<Node group="[]" id="7" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:28, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:82)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="8" dst_node_input="b" src_node_id="7" src_node_output="o" />
	<Node group="[]" id="8" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:82)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="9" dst_node_input="option1" src_node_id="8" src_node_output="result" />
	<Node group="[]" id="9" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1152)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="49" dst_node_input="a" src_node_id="9" src_node_output="result" />
	<Edge dst_node_id="61" dst_node_input="a" src_node_id="9" src_node_output="result" />
	<Node group="[]" id="48" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:137)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge dst_node_id="49" dst_node_input="b" src_node_id="48" src_node_output="value" />
	<Node group="[]" id="49" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:929)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:137)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="50" dst_node_input="b" src_node_id="49" src_node_output="result" />
	<Node group="[]" id="50" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLt">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:822)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:137)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="52" dst_node_input="b" src_node_id="50" src_node_output="result" />
	<Node group="[]" id="52" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:522)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:141)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="53" dst_node_input="b" src_node_id="52" src_node_output="result" />
	<Node group="[]" id="53" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOr">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>|</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.or(DFEVar.java:410)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.generateControl(ColumnMemoryControllerKernel.java:140)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:40)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="84" dst_node_input="a" src_node_id="53" src_node_output="result" />
	<Node group="[]" id="82" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="io_column_bursts_from_DRAM_cmd_force_disabled" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Scalar input (io_column_bursts_from_DRAM_cmd_force_disabled)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Name>io_column_bursts_from_DRAM_cmd_force_disabled</Name>
	</Node>
	<Edge dst_node_id="83" dst_node_input="a" src_node_id="82" src_node_output="io_column_bursts_from_DRAM_cmd_force_disabled" />
	<Node group="[]" id="83" isControl="true" isVisible="false" pipelineFactor="0.0" type="NodeNot">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>~</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="84" dst_node_input="b" src_node_id="83" src_node_output="result" />
	<Node group="[]" id="84" isControl="false" isVisible="false" pipelineFactor="0.0" type="NodeAnd">
		<Input name="a" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&amp;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="85" dst_node_input="output_control" src_node_id="84" src_node_output="result" />
	<Node group="[]" id="72" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="93" dst_node_input="input" src_node_id="72" src_node_output="value" />
	<Node group="[]" id="93" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(1)" />
		<Text>&lt;{HWRawBits:1}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="94" dst_node_input="in0" src_node_id="93" src_node_output="output" />
	<Node group="[]" id="78" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(15, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:15, 0, UNSIGNED}\n0x0001; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>000000000000001</Value>
		<HexValue>0x0001</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="79" dst_node_input="datain" src_node_id="78" src_node_output="value" />
	<Node group="[]" id="71" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:4, 0, UNSIGNED}\n0x0; 0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0000</Value>
		<HexValue>0x0</HexValue>
		<NumericValue>0.0</NumericValue>
	</Node>
	<Edge dst_node_id="79" dst_node_input="shift" src_node_id="71" src_node_output="value" />
	<Node group="[]" id="79" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeShift">
		<Input name="datain" type="dfeOffsetFix(15, 0, UNSIGNED)" />
		<Input name="shift" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="2" name="dataout" type="dfeBits(15)" />
		<Text>&lt;&lt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Direction>Left</Direction>
		<Circular>false</Circular>
	</Node>
	<Edge dst_node_id="80" dst_node_input="input" src_node_id="79" src_node_output="dataout" />
	<Node group="[]" id="80" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(15)" />
		<Output latency="0" name="output" type="dfeOffsetFix(15, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:15, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="81" dst_node_input="input" src_node_id="80" src_node_output="output" />
	<Node group="[]" id="81" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(15, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(15)" />
		<Text>&lt;{HWRawBits:15}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="91" dst_node_input="input" src_node_id="81" src_node_output="output" />
	<Node group="[]" id="91" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(15)" />
		<Output latency="0" name="output" type="dfeBits(15)" />
		<Text>&lt;{HWRawBits:15}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="92" dst_node_input="in0" src_node_id="91" src_node_output="output" />
	<Node group="[]" id="57" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:4, 0, UNSIGNED}\n0x9; 9.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.modulo(KernelMath.java:803)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:156)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1001</Value>
		<HexValue>0x9</HexValue>
		<NumericValue>9.0</NumericValue>
	</Node>
	<Edge dst_node_id="58" dst_node_input="denominator" src_node_id="57" src_node_output="value" />
	<Node group="[]" id="58" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDivMod">
		<Input name="numerator" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="denominator" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="29" name="quotient" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="29" name="remainder" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>NodeDivMod</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.modulo(KernelMath.java:803)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:156)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="59" dst_node_input="i" src_node_id="58" src_node_output="remainder" />
	<Node group="[]" id="59" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:28, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:156)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="60" dst_node_input="b" src_node_id="59" src_node_output="o" />
	<Node group="[]" id="60" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:156)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="61" dst_node_input="b" src_node_id="60" src_node_output="result" />
	<Node group="[]" id="61" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeSub">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>-</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:914)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:157)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="63" dst_node_input="numerator" src_node_id="61" src_node_output="result" />
	<Node group="[]" id="62" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:160)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge dst_node_id="63" dst_node_input="denominator" src_node_id="62" src_node_output="value" />
	<Node group="[]" id="63" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDivMod">
		<Input name="numerator" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="denominator" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="29" name="quotient" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="29" name="remainder" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>NodeDivMod</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.divMod(KernelMath.java:776)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:160)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="65" dst_node_input="a" src_node_id="63" src_node_output="quotient" />
	<Edge dst_node_id="67" dst_node_input="option1" src_node_id="63" src_node_output="quotient" />
	<Node group="[]" id="64" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>128.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:699)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:161)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>128.0</Value>
	</Node>
	<Edge dst_node_id="65" dst_node_input="b" src_node_id="64" src_node_output="value" />
	<Node group="[]" id="65" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeLte">
		<Input name="a" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>&lt;=</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lte(DFEVar.java:699)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:161)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="67" dst_node_input="sel" src_node_id="65" src_node_output="result" />
	<Node group="[]" id="66" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:28, 0, UNSIGNED}\n0x0000080; 128.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:161)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0000000000000000000010000000</Value>
		<HexValue>0x0000080</HexValue>
		<NumericValue>128.0</NumericValue>
	</Node>
	<Edge dst_node_id="67" dst_node_input="option0" src_node_id="66" src_node_output="value" />
	<Node group="[]" id="67" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getBurstToTransfer(ColumnMemoryControllerKernel.java:161)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:46)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="69" dst_node_input="i" src_node_id="67" src_node_output="result" />
	<Node group="[]" id="69" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:51)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="74" dst_node_input="a" src_node_id="69" src_node_output="o" />
	<Edge dst_node_id="87" dst_node_input="input" src_node_id="69" src_node_output="o" />
	<Node group="[]" id="73" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>0.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>0.0</Value>
	</Node>
	<Edge dst_node_id="74" dst_node_input="b" src_node_id="73" src_node_output="value" />
	<Node group="[]" id="74" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="77" dst_node_input="sel" src_node_id="74" src_node_output="result" />
	<Node group="[]" id="70" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:8, 0, UNSIGNED}\n0x01; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:99)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:52)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>00000001</Value>
		<HexValue>0x01</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="77" dst_node_input="option0" src_node_id="70" src_node_output="value" />
	<Node group="[]" id="75" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeBits(8)" />
		<Text>{HWRawBits:8}\n0x00</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>00000000</Value>
		<HexValue>0x00</HexValue>
	</Node>
	<Edge dst_node_id="76" dst_node_input="input" src_node_id="75" src_node_output="value" />
	<Node group="[]" id="76" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeBits(8)" />
		<Output latency="0" name="output" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>&lt;{HWOffsetFix:8, 0, UNSIGNED}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="77" dst_node_input="option1" src_node_id="76" src_node_output="output" />
	<Node group="[]" id="77" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeMux">
		<Input name="sel" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="option0" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Input name="option1" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Text>MUX</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="89" dst_node_input="input" src_node_id="77" src_node_output="result" />
	<Node group="[]" id="89" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="90" dst_node_input="in0" src_node_id="89" src_node_output="output" />
	<Node group="[]" id="87" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(8, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(8)" />
		<Text>&lt;{HWRawBits:8}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="88" dst_node_input="in0" src_node_id="87" src_node_output="output" />
	<Node group="[]" id="54" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>9.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Constant.var(Constant.java:89)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getStartingAddress(ColumnMemoryControllerKernel.java:149)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:43)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>9.0</Value>
	</Node>
	<Edge dst_node_id="55" dst_node_input="denominator" src_node_id="54" src_node_output="value" />
	<Node group="[]" id="55" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeDivMod">
		<Input name="numerator" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Input name="denominator" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Output latency="29" name="quotient" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="29" name="remainder" type="dfeOffsetFix(4, 0, UNSIGNED)" />
		<Text>NodeDivMod</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.KernelMath.divMod(KernelMath.java:776)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getStartingAddress(ColumnMemoryControllerKernel.java:149)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:43)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="56" dst_node_input="i" src_node_id="55" src_node_output="quotient" />
	<Node group="[]" id="56" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(28, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(27, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:27, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.getStartingAddress(ColumnMemoryControllerKernel.java:149)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:43)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="68" dst_node_input="i" src_node_id="56" src_node_output="o" />
	<Node group="[]" id="68" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCast">
		<Input name="i" type="dfeOffsetFix(27, 0, UNSIGNED)" />
		<Output latency="0" name="o" type="dfeOffsetFix(32, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:32, 0, UNSIGNED}</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.cast(DFEVar.java:165)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:50)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="86" dst_node_input="input" src_node_id="68" src_node_output="o" />
	<Node group="[]" id="86" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeReinterpret">
		<Input name="input" type="dfeOffsetFix(32, 0, UNSIGNED)" />
		<Output latency="0" name="output" type="dfeBits(32)" />
		<Text>&lt;{HWRawBits:32}&gt;</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="88" dst_node_input="in1" src_node_id="86" src_node_output="output" />
	<Node group="[]" id="88" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(8)" />
		<Input name="in1" type="dfeBits(32)" />
		<Output latency="0" name="result" type="dfeBits(40)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="90" dst_node_input="in1" src_node_id="88" src_node_output="result" />
	<Node group="[]" id="90" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(8)" />
		<Input name="in1" type="dfeBits(40)" />
		<Output latency="0" name="result" type="dfeBits(48)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="92" dst_node_input="in1" src_node_id="90" src_node_output="result" />
	<Node group="[]" id="92" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(15)" />
		<Input name="in1" type="dfeBits(48)" />
		<Output latency="0" name="result" type="dfeBits(63)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="94" dst_node_input="in1" src_node_id="92" src_node_output="result" />
	<Node group="[]" id="94" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeCat">
		<Input name="in0" type="dfeBits(1)" />
		<Input name="in1" type="dfeBits(63)" />
		<Output latency="0" name="result" type="dfeBits(64)" />
		<Text>@</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="85" dst_node_input="data" src_node_id="94" src_node_output="result" />
	<Node group="[]" id="85" isControl="false" isVisible="true" pipelineFactor="1.0" type="NodeOutput">
		<Input name="output_control" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeBits(64)" />
		<Text>Output(column_bursts_from_DRAM_cmd)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.LMemCommandStream.makeKernelOutput(LMemCommandStream.java:83)
com.maxeler.publicdemos.brainnetwork.ColumnMemoryControllerKernel.&lt;init&gt;(ColumnMemoryControllerKernel.java:49)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:54)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Name>column_bursts_from_DRAM_cmd</Name>
	</Node>
	<Node group="[]" id="99" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1</Value>
		<HexValue>0x1</HexValue>
		<NumericValue>1.0</NumericValue>
	</Node>
	<Edge dst_node_id="100" dst_node_input="load" src_node_id="99" src_node_output="value" />
	<Node group="[]" id="95" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="97" dst_node_input="enable" src_node_id="95" src_node_output="value" />
	<Node group="[]" id="96" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
		<HexValue>0x1000000000000</HexValue>
		<NumericValue>2.81474976710656E14</NumericValue>
	</Node>
	<Edge dst_node_id="97" dst_node_input="max" src_node_id="96" src_node_output="value" />
	<Node group="[]" id="97" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="98" dst_node_input="input" src_node_id="97" src_node_output="count" />
	<Node group="[]" id="98" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeStreamOffset">
		<Input name="input" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="output" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>stream offset: 1</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="100" dst_node_input="data" src_node_id="98" src_node_output="output" />
	<Node group="[]" id="100" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeOutputMappedReg">
		<Input name="load" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="data" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar output (current_run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Name>current_run_cycle_count</Name>
	</Node>
	<Node group="[]" id="101" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantDouble">
		<Output latency="0" name="value" type="dfeUntypedConst()" />
		<Text>1.0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1.0</Value>
	</Node>
	<Edge dst_node_id="103" dst_node_input="enable" src_node_id="101" src_node_output="value" />
	<Node group="[]" id="102" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeConstantRawBits">
		<Output latency="0" name="value" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Text>{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Value>1000000000000000000000000000000000000000000000000</Value>
		<HexValue>0x1000000000000</HexValue>
		<NumericValue>2.81474976710656E14</NumericValue>
	</Node>
	<Edge dst_node_id="103" dst_node_input="max" src_node_id="102" src_node_output="value" />
	<Node group="[]" id="103" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeCounterV1">
		<Input name="enable" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Input name="max" type="dfeOffsetFix(49, 0, UNSIGNED)" />
		<Output latency="0" name="count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="0" name="wrap" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Increment>1</Increment>
		<WrapValue>0</WrapValue>
		<InitValue>0</InitValue>
		<CountMode>NUMERIC_INCREMENTING</CountMode>
		<WrapMode>COUNT_LT_MAX_THEN_WRAP</WrapMode>
	</Node>
	<Edge dst_node_id="106" dst_node_input="a" src_node_id="103" src_node_output="count" />
	<Node group="[]" id="105" isControl="true" isVisible="false" pipelineFactor="1.0" type="NodeInputMappedReg">
		<Output latency="0" name="run_cycle_count" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Text>Scalar input (run_cycle_count)</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
		<Name>run_cycle_count</Name>
	</Node>
	<Edge dst_node_id="106" dst_node_input="b" src_node_id="105" src_node_output="run_cycle_count" />
	<Node group="[]" id="106" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeEq">
		<Input name="a" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Input name="b" type="dfeOffsetFix(48, 0, UNSIGNED)" />
		<Output latency="1" name="result" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>==</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
	<Edge dst_node_id="104" dst_node_input="start" src_node_id="106" src_node_output="result" />
	<Node group="[]" id="104" isControl="false" isVisible="false" pipelineFactor="1.0" type="NodeFlush">
		<Input name="start" type="dfeOffsetFix(1, 0, UNSIGNED)" />
		<Text>flush on trigger</Text>
		<OriginStackTrace>com.maxeler.maxcompiler.v2.managers.custom.CustomManager.addKernel(CustomManager.java:1014)
com.maxeler.publicdemos.brainnetwork.BrainNetworkManager.&lt;init&gt;(BrainNetworkManager.java:53)
com.maxeler.publicdemos.brainnetwork.BrainNetworkBuilder.main(BrainNetworkBuilder.java:25)</OriginStackTrace>
	</Node>
</Graph>
